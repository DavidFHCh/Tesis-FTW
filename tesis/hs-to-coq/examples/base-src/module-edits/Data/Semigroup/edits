rename value Data.Semigroup.option = Data.Semigroup.destruct_option

add Data.Semigroup Instance Unpeel_Option a : GHC.Prim.Unpeel (Option a) (option a) :=
      GHC.Prim.Build_Unpeel _ _ getOption Mk_Option.
add Data.Semigroup Instance Unpeel_WrappedMonoid a : GHC.Prim.Unpeel (WrappedMonoid a) a :=
      GHC.Prim.Build_Unpeel _ _ unwrapMonoid WrapMonoid.
add Data.Semigroup Instance Unpeel_Last a : GHC.Prim.Unpeel (Last a) a :=
      GHC.Prim.Build_Unpeel _ _ getLast Mk_Last.
add Data.Semigroup Instance Unpeel_First a : GHC.Prim.Unpeel (First a) a :=
      GHC.Prim.Build_Unpeel _ _ getFirst Mk_First.
add Data.Semigroup Instance Unpeel_Max a : GHC.Prim.Unpeel (Max a) a :=
      GHC.Prim.Build_Unpeel _ _ getMax Mk_Max.
add Data.Semigroup Instance Unpeel_Min a : GHC.Prim.Unpeel (Min a) a :=
      GHC.Prim.Build_Unpeel _ _ getMin Mk_Min.


# partial (and type inference can't handle it, and termination is tricky)
skip Data.Semigroup.stimesMonoid

# needs stimesMonoid, Alternative
skip Data.Semigroup.Semigroup__Alt
skip Data.Semigroup.MonadPlus__Option

# looping
skip Data.Semigroup.cycle1

skip Data.Semigroup.stimesIdempotent
skip Data.Semigroup.stimesIdempotentMonoid

skip Data.Semigroup.mtimesDefault

# Picks wrong methods in methods
skip Data.Semigroup.Ord__Arg

## needs Bounded Min/Bounded Max
skip Data.Semigroup.Monoid__Min
skip Data.Semigroup.Monoid__Max



##################################

order Unpeel_Min Data.Semigroup.Eq___Min_op_zeze__
order Unpeel_Min Data.Semigroup.Eq___Min_op_zsze__

order Unpeel_Max Data.Semigroup.Eq___Max_op_zeze__
order Unpeel_Max Data.Semigroup.Eq___Max_op_zsze__

order Unpeel_First Data.Semigroup.Eq___First_op_zeze__
order Unpeel_First Data.Semigroup.Eq___First_op_zsze__

order Unpeel_Last Data.Semigroup.Eq___Last_op_zeze__
order Unpeel_Last Data.Semigroup.Eq___Last_op_zsze__

order Unpeel_Option Data.Semigroup.Eq___Option_op_zeze__
order Unpeel_Option Data.Semigroup.Eq___Option_op_zsze__

order Unpeel_WrappedMonoid Data.Semigroup.Eq___WrappedMonoid_op_zeze__
order Unpeel_WrappedMonoid Data.Semigroup.Eq___WrappedMonoid_op_zsze__

order Data.Semigroup.Eq___Max           Data.Semigroup.Ord__Max
order Data.Semigroup.Eq___Min           Data.Semigroup.Ord__Min
order Data.Semigroup.Eq___First         Data.Semigroup.Ord__First
order Data.Semigroup.Eq___Last          Data.Semigroup.Ord__Last
order Data.Semigroup.Eq___Option        Data.Semigroup.Ord__Option
order Data.Semigroup.Eq___WrappedMonoid Data.Semigroup.Ord__WrappedMonoid

order Data.Semigroup.Semigroup__WrappedMonoid Data.Semigroup.Monoid__WrappedMonoid_mappend
order Data.Semigroup.Semigroup__Option        Data.Semigroup.Monoid__Option_mappend

order Data.Semigroup.Functor__Max    Data.Semigroup.Applicative__Max    Data.Semigroup.Monad__Max_op_zgzg__
order Data.Semigroup.Functor__Min    Data.Semigroup.Applicative__Min    Data.Semigroup.Monad__Min_op_zgzg__
order Data.Semigroup.Functor__First  Data.Semigroup.Applicative__First  Data.Semigroup.Monad__First_op_zgzg__
order Data.Semigroup.Functor__Last   Data.Semigroup.Applicative__Last   Data.Semigroup.Monad__Last_op_zgzg__
order Data.Semigroup.Functor__Option Data.Semigroup.Applicative__Option Data.Semigroup.Monad__Option_op_zgzg__

order Data.Semigroup.Foldable__Max    Data.Semigroup.Traversable__Max
order Data.Semigroup.Foldable__Min    Data.Semigroup.Traversable__Min
order Data.Semigroup.Foldable__First  Data.Semigroup.Traversable__First
order Data.Semigroup.Foldable__Last   Data.Semigroup.Traversable__Last
order Data.Semigroup.Foldable__Option Data.Semigroup.Traversable__Option

order Data.Semigroup.Bifunctor__Arg  Data.Semigroup.Bitraversable__Arg
order Data.Semigroup.Bifoldable__Arg Data.Semigroup.Bitraversable__Arg
order Data.Semigroup.Functor__Arg    Data.Semigroup.Traversable__Arg
order Data.Semigroup.Foldable__Arg   Data.Semigroup.Traversable__Arg

order Data.Semigroup.Functor__Option Data.Semigroup.Traversable__Option

# Instance names for nested products are created wrongly, so
# Semigroup (,) and Semigroup (,,) clash
skip Data.Semigroup.Semigroup__op_zt__

# https://github.com/antalsz/hs-to-coq/issues/51
# doing these by hand
redefine Local Definition Data.Semigroup.Semigroup__Endo_op_zlzlzgzg__ {a} : 
			(Data.Monoid.Endo a) -> ((Data.Monoid.Endo a) -> (Data.Monoid.Endo a)) :=
  GHC.Prim.coerce (@GHC.Base.op_z2218U__ a a a).
redefine Local Definition Data.Semigroup.Semigroup__Sum_op_zlzlzgzg__ {inst_a} `{_: GHC.Num.Num inst_a}
    : (Data.Monoid.Sum inst_a) -> ((Data.Monoid.Sum inst_a) -> ((Data.Monoid.Sum
      inst_a))) :=
  GHC.Prim.coerce (@GHC.Num.op_zp__ inst_a _).
redefine Local Definition Data.Semigroup.Semigroup__Product_op_zlzlzgzg__ {inst_a} `{_:GHC.Num.Num inst_a}
    : (Data.Monoid.Product inst_a) -> 
	 ((Data.Monoid.Product inst_a) -> (Data.Monoid.Product inst_a)) :=
  GHC.Prim.coerce (@GHC.Num.op_zm__ inst_a _).

redefine Local Definition Data.Semigroup.Semigroup__Const_op_zlzlzgzg__ {inst_a} {inst_b} `{_:GHC.Base.Semigroup  inst_a} : 
  (Data.Functor.Const.Const inst_a inst_b) -> 
  ((Data.Functor.Const.Const inst_a inst_b) -> 
   (Data.Functor.Const.Const inst_a inst_b)) :=
  GHC.Prim.coerce (@GHC.Base.op_zlzlzgzg__ inst_a _).

redefine Local Definition Data.Semigroup.Semigroup__Min_op_zlzlzgzg__ {inst_a} `{_:GHC.Base.Ord inst_a} : (Min inst_a) -> ((Min inst_a) -> (Min inst_a)) :=
  GHC.Prim.coerce (@GHC.Base.min inst_a _ _).

redefine Local Definition Data.Semigroup.Semigroup__Max_op_zlzlzgzg__ {inst_a} `{_:GHC.Base.Ord inst_a} : (Max inst_a) -> ((Max inst_a) -> (Max inst_a)) :=
  GHC.Prim.coerce (@GHC.Base.max inst_a _ _).

redefine Local Definition Data.Semigroup.Semigroup__WrappedMonoid_op_zlzlzgzg__ {inst_m} `{_:GHC.Base.Monoid inst_m} : (WrappedMonoid inst_m) -> ((WrappedMonoid inst_m) -> (WrappedMonoid inst_m)) :=
  GHC.Prim.coerce (@GHC.Base.mappend inst_m _ _).

redefine Local Definition Data.Semigroup.Semigroup__Option_op_zlzlzgzg__ {inst_a} `{_: GHC.Base.Semigroup inst_a}
    : (Option inst_a) -> ((Option inst_a) -> (Option inst_a)) :=
  GHC.Prim.coerce (@GHC.Base.op_zlzlzgzg__ (option inst_a) _).


